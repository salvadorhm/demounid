package com.blogspot.salvadorhm.almacendemo00;


import android.app.AlertDialog;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.NetworkOnMainThreadException;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;

import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.widget.Toolbar;
import android.view.View;

public class BuscarProductos extends AppCompatActivity {

    private String getContactURL = "http://demounid.herokuapp.com/api_productos?user_hash=12345&action=get";
    private String queryParams = "";
    private Button btn_buscar;
    private EditText et_id_producto;
    private TextView tv_producto;
    private TextView tv_existencias;
    private TextView tv_costo;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_buscar_productos);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        et_id_producto = (EditText) findViewById(R.id.et_id_producto);
        tv_producto = (TextView) findViewById(R.id.tv_producto);
        tv_existencias = (TextView) findViewById(R.id.tv_existencias);
        tv_costo = (TextView) findViewById(R.id.tv_costo);

        btn_buscar = (Button) findViewById(R.id.btn_buscar);
        btn_buscar.setOnClickListener(onClickListener);
    }

    private View.OnClickListener onClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (v == btn_buscar)
                Log.d("Boton buscar", "precionado");
            btn_buscar_onClick();
        }
    };


    private void btn_buscar_onClick() {
        String id_producto = et_id_producto.getText().toString();

        Uri.Builder builder = new Uri.Builder();
        builder.appendQueryParameter("id_producto", id_producto);
        queryParams = builder.build().getEncodedQuery();

        Log.d("queryParams", queryParams);
        //performPostCall(getContactURL, queryParams);
        new NetworkAsyncTask().execute();

    }

    class NetworkAsyncTask extends AsyncTask<Void, Void, Void> {

        @Override
        protected Void doInBackground(Void... params) {
            //private void performPostCall(String requestURL, String query) {
            URL url;
            String webServiceResult = "";

            try {
                //url = new URL(requestURL);
                url = new URL(getContactURL);

                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setReadTimeout(15000);
                conn.setConnectTimeout(15000);
                conn.setRequestMethod("GET");
                conn.setDoInput(true);
                conn.setDoOutput(true);
                OutputStream os = conn.getOutputStream();
                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"));
                //writer.write(query);
                writer.write(queryParams);
                writer.flush();
                writer.close();
                Log.d("Consulta al servidor", queryParams);
                os.close();
                int responseCode = conn.getResponseCode();
                Log.d("response", "" + responseCode);

                if (responseCode == HttpURLConnection.HTTP_OK) {
                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                    String line = "";
                    while ((line = bufferedReader.readLine()) != null) {
                        webServiceResult += line;
                    }
                    bufferedReader.close();
                } else {
                    webServiceResult = "";
                }

            } catch (NetworkOnMainThreadException e) {
                e.printStackTrace();
                Log.e("SearchActivity", e.getMessage());
            } catch (MalformedURLException e){
                e.printStackTrace();
                Log.e("SearchActivity", e.getMessage());
            } catch (IOException e){
                e.printStackTrace();
                Log.e("SearchActivity", e.getMessage());
            }

            if (webServiceResult != null)
                parseInformation(webServiceResult);
            else
                //Message("Search", "Contact not found");
                Log.e("datos", "vacios");
            return null;
        }

        private void parseInformation(String jsonResult) {
            JSONArray jsonArray = null;
            String id_producto;
            String producto;
            String existencias;
            String costo;
            try {
                jsonArray = new JSONArray(jsonResult);
            } catch (JSONException e) {
                e.printStackTrace();
            }
            for (int i = 0; i < jsonArray.length(); i++) {
                try {
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    id_producto = jsonObject.getString("id_producto");
                    producto = jsonObject.getString("producto");
                    existencias = jsonObject.getString("existencias");
                    costo = jsonObject.getString("costo");
                    tv_producto.setText(producto);
                    tv_existencias.setText(existencias);
                    tv_costo.setText(costo);
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }
/*
        private void Message(String title, String message) {
            AlertDialog.Builder alertDialog = new AlertDialog.Builder();
            alertDialog.setTitle(title);
            alertDialog.setMessage(message);
            alertDialog.show();
        }
        */
    }

}

